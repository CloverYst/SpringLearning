<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- bean definitions here -->

    <!--
    引用类型的自动注入
        1.byName(按名称注入): java类中引用类型属性名称和spring容器中bean的id名称一样的，
        且数据类型也是一样的，这样的bean能赋值给引用类型
        语法规则：
            <bean id="xxx" class="yyy" autowire="byName" >
            </bean>
        2.byType(按类型注入):java类中引用类型的数据类型和spring容器中bean的class值是同源关系，这样的bean能赋值给引用类型
        同源：
            1.java中的引用类型的数据类型和bean的class值是一样的
            2.java中的引用类型的数据类型和bean的class值是父子类关系
            3.java中的引用类型的数据类型和bean的class值接口和实现类关系
        语法规则:

    -->

    <bean id="myStudent" class="org.example.ba05.Student" autowire="byType" >
        <property name="name" value="Type Test" /> <!--setName()-->
        <property name="age" value="12" />  <!--setAge()-->
        <!--引用类型的赋值-->
<!--        <property name="school" ref="mySchool"/> -->
        <!--setSchool()-->
    </bean>

    <!--同源关系的第一种 id不需要和引用类型的命名相同-->
<!--    <bean id="mySchool" class="org.example.ba05.School" >-->
<!--        <property name="name" value="AutoWireByType测试" /> &lt;!&ndash;setName()&ndash;&gt;-->
<!--        <property name="address" value="LosAngeles" />  &lt;!&ndash;setAge()&ndash;&gt;-->
<!--    </bean>-->

    <!--同源关系的第一种 声明子类-->
    <bean id="primarySchool" class="org.example.ba05.PrimarySchool">
        <property name="name" value="子类小学" />
        <property name="address" value="卧龙区"/>
    </bean>

</beans>